// 🔥 紧急备用：完全禁用ONNX的安全模式
// 如果仍然崩溃，可以使用这个文件替换SimpleAIPlayer.cpp中的ONNX相关部分

// 在构造函数中：
/*
SimpleAIPlayer::SimpleAIPlayer(CloneBall* playerBall, QObject* parent)
    : QObject(parent)
    , m_playerBall(playerBall)
    , m_decisionTimer(new QTimer(this))
    , m_aiActive(false)
    , m_decisionInterval(200)
    , m_strategy(AIStrategy::FOOD_HUNTER)
    , m_currentTarget(nullptr)
    , m_targetLockFrames(0)
    , m_onnxInference(nullptr) // 🔥 紧急修复：完全禁用ONNX
    , m_observationSize(400)
    , m_stuckFrameCount(0)
    , m_lastPosition(0, 0)
    , m_borderCollisionCount(0)
{
    // 其余代码保持不变...
}
*/

// 在loadAIModel中：
/*
bool SimpleAIPlayer::loadAIModel(const QString& modelPath) {
    qWarning() << "ONNX disabled for safety, model loading skipped:" << modelPath;
    return false; // 总是返回false，强制使用启发式策略
}
*/

// 在isModelLoaded中：
/*
bool SimpleAIPlayer::isModelLoaded() const {
    return false; // 总是返回false，强制使用启发式策略
}
*/

// 在makeModelBasedDecision中：
/*
AIAction SimpleAIPlayer::makeModelBasedDecision() {
    qDebug() << "Model-based decision disabled for safety, using FOOD_HUNTER";
    return makeFoodHunterDecision();
}
*/
